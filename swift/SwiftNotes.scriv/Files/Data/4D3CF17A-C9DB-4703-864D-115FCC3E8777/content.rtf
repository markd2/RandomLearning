{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Palatino-Bold;\f1\froman\fcharset0 Palatino-Roman;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx0\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\sl264\slmult1\pardirnatural\partightenfactor0

\f0\b\fs36 \cf0 Swift Testing
\f1\b0 \
\
New and improved testing frameworkke\
\
\pard\tx0\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\sl264\slmult1\pardirnatural\qc\partightenfactor0
\cf0 \ul \ulc0 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\ulnone \
\pard\tx0\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\sl264\slmult1\pardirnatural\partightenfactor0
\cf0 \

\f0\b https://developer.apple.com/xcode/swift-testing/
\f1\b0 \
\

\f0\b Clear Expressive API
\f1\b0 \
\
* declare complex behaviors with a small amount of code\
* #expect uses Swift expressions and operators\
	- captures evaluated values so can quickly understand what went wrong\
* Parameterized tests run the same test over a sequence of values\
* integrate seamlessly with Swift Concurrency and run in parallel by default\
\

\f2 @Test("Continents mentioned in videos", arguments: [\
    "A Beach",\
    "By the Lake",\
    "Camping in the Woods"\
])\
func mentionedContinents(videoName: String) async throws \{\
    let videoLibrary = try await VideoLibrary()\
    let video = try #require(await videoLibrary.video(named: videoName))\
    #expect(video.mentionedContinents.count <= 3)\
\}
\f1 \
\

\f0\b Custom test behaviors\

\f1\b0 \
Can customize behavior of test/suites using traits.\
Can describe the runtime conditions for a test\
	- which device a test should ruin on\
	- limt test to a certain OS system versions\
	- help in CI by specifying execution time limits\
\

\f2 @Test(.enabled(if: AppFeatures.isCommentingEnabled))\
func videoCommenting() async throws \{\
    let video = try #require(await videoLibrary.video(named: "A Beach"))\
    #expect(video.comments.contains("So picturesque!"))\
\}\

\f1 \

\f0\b Easy and Flexible Organization\

\f1\b0 \
Provides many ways to keep your tests organized.\
	- structure related tests using a hierarchy of groups and subgroups\
	- apply tags to flexibly manage, edit, and run tests with common characteristics across your test suite\
\
}