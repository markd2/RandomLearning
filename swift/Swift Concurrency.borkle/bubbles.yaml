- ID: 1
  text: ASYNC CAFE
  fillColorRGB:
    red: 8.93993e-1
    green: 9.92872e-1
    blue: 1e+0
  formattingOptions:
  - options: 1
    rangeStart: 0
    rangeLength: 10
  position:
  - 3.32026988636364e+2
  - 8.51377840909091e+1
  width: 1.6e+2
  connections:
    indexes:
    - location: 2
      length: 2
  _effectiveHeight: 1.4e+1
- ID: 2
  text: Dan Steinberg
  formattingOptions: []
  position:
  - 5.30899857954546e+2
  - 6.95490056818182e+1
  width: 9e+1
  connections:
    indexes:
    - location: 1
      length: 1
    - location: 54
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 3
  text: https://editorscut.gumroad.com/l/async
  formattingOptions: []
  position:
  - 2.88200994318182e+2
  - 3.07308238636363e+1
  width: 2.2e+2
  connections:
    indexes:
    - location: 1
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 4
  text: Basic elements
  fillColorRGB:
    red: 1e+0
    green: 9.0283e-1
    blue: 9.76506e-1
  formattingOptions: []
  position:
  - 4.24875355113636e+2
  - 4.60818536931818e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 5
      length: 3
    - location: 35
      length: 1
    - location: 63
      length: 1
    - location: 67
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 5
  text: async
  fillColorRGB:
    red: 8.96043e-1
    green: 9.97437e-1
    blue: 9.42763e-1
  formattingOptions: []
  position:
  - 5.36212357954545e+2
  - 7.01365056818182e+2
  width: 7e+1
  connections:
    indexes:
    - location: 4
      length: 1
    - location: 17
      length: 1
    - location: 29
      length: 1
    - location: 40
      length: 2
    - location: 47
      length: 1
    - location: 60
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 6
  text: await
  fillColorRGB:
    red: 8.96043e-1
    green: 9.97437e-1
    blue: 9.42763e-1
  formattingOptions: []
  position:
  - 6.44453125e+2
  - 5.31063920454545e+2
  width: 7e+1
  connections:
    indexes:
    - location: 4
      length: 1
    - location: 18
      length: 1
    - location: 29
      length: 2
    - location: 32
      length: 1
    - location: 42
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 7
  text: Task
  fillColorRGB:
    red: 8.96043e-1
    green: 9.97437e-1
    blue: 9.42763e-1
  formattingOptions: []
  position:
  - 2.83192471590909e+2
  - 3.67672585227273e+2
  width: 7e+1
  connections:
    indexes:
    - location: 4
      length: 1
    - location: 43
      length: 3
    - location: 55
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 8
  text: Mechanisms
  fillColorRGB:
    red: 1e+0
    green: 9.0283e-1
    blue: 9.76506e-1
  formattingOptions: []
  position:
  - 1.25864346590909e+3
  - 1.81756392045455e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 9
      length: 1
    - location: 19
      length: 1
    - location: 74
      length: 1
    - location: 78
      length: 1
    - location: 83
      length: 1
    - location: 92
      length: 1
    - location: 97
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 9
  text: Checked Continuations
  fillColorRGB:
    red: 8.96043e-1
    green: 9.97437e-1
    blue: 9.42763e-1
  formattingOptions: []
  position:
  - 1.44199928977273e+3
  - 2.57750710227273e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 8
      length: 1
    - location: 21
      length: 1
    - location: 79
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 10
  text: More than one result over time
  fillColorRGB:
    red: 1e+0
    green: 9.0283e-1
    blue: 9.76506e-1
  formattingOptions: []
  position:
  - 1.97687781359265e+3
  - 2.50734429632867e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 11
      length: 2
    - location: 23
      length: 1
    - location: 100
      length: 1
    - location: 102
      length: 1
    - location: 106
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 11
  text: AsyncSequence
  fillColorRGB:
    red: 8.96043e-1
    green: 9.97437e-1
    blue: 9.42763e-1
  formattingOptions: []
  position:
  - 1.84870637565559e+3
  - 2.34293214597903e+2
  width: 1.2e+2
  connections:
    indexes:
    - location: 10
      length: 1
    - location: 12
      length: 1
    - location: 99
      length: 1
    - location: 113
      length: 2
  _effectiveHeight: 1.4e+1
- ID: 12
  text: AsyncStream<T>
  fillColorRGB:
    red: 8.96043e-1
    green: 9.97437e-1
    blue: 9.42763e-1
  formattingOptions: []
  position:
  - 1.9511520159528e+3
  - 4.543866368007e+2
  width: 1.2e+2
  connections:
    indexes:
    - location: 10
      length: 2
    - location: 98
      length: 1
    - location: 108
      length: 4
  _effectiveHeight: 1.4e+1
- ID: 13
  text: 'Structured Concurrency: Start tasks and synchronize later one'
  fillColorRGB:
    red: 1e+0
    green: 9.0283e-1
    blue: 9.76506e-1
  formattingOptions: []
  position:
  - 3.19728515625e+3
  - 1.30825994318182e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 14
      length: 2
    - location: 24
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 14
  text: async let
  formattingOptions: []
  position:
  - 3.32201526988636e+3
  - 2.48631392045455e+2
  width: 9e+1
  connections:
    indexes:
    - location: 13
      length: 1
    - location: 25
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 15
  text: TaskGroups
  formattingOptions: []
  position:
  - 3.23543146306818e+3
  - 6.81484347727275e+1
  width: 9e+1
  connections:
    indexes:
    - location: 13
      length: 1
    - location: 26
      length: 2
  _effectiveHeight: 1.4e+1
- ID: 16
  text: Actors
  fillColorRGB:
    red: 1e+0
    green: 9.0283e-1
    blue: 9.76506e-1
  formattingOptions: []
  position:
  - 2.98567649147727e+3
  - 6.0773295454546e+2
  width: 6e+1
  connections:
    indexes:
    - location: 28
      length: 1
    - location: 48
      length: 2
    - location: 51
      length: 1
    - location: 91
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 17
  text: Indicates a method can suspend, so the app isn't blocked by long-running work.  we
    can do the work and come back later.
  formattingOptions: []
  position:
  - 4.60340909090909e+2
  - 5.28187500000004e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 5
      length: 1
  _effectiveHeight: 7e+1
- ID: 18
  text: point to a possible suspension point
  formattingOptions: []
  position:
  - 5.41246448863636e+2
  - 4.15936079545459e+2
  width: 1.2e+2
  connections:
    indexes:
    - location: 6
      length: 1
    - location: 31
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 19
  text: Continuations
  fillColorRGB:
    red: 8.96043e-1
    green: 9.97437e-1
    blue: 9.42763e-1
  formattingOptions: []
  position:
  - 1.15740411931818e+3
  - 1.98702414772726e+2
  width: 9e+1
  connections:
    indexes:
    - location: 8
      length: 1
    - location: 20
      length: 1
    - location: 75
      length: 3
    - location: 80
      length: 3
  _effectiveHeight: 1.4e+1
- ID: 20
  text: Wrap delegate and callback closures
  formattingOptions: []
  position:
  - 1.04575284090909e+3
  - 1.28879971590908e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 19
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 21
  text: a promise that async methods use to return a value in the future
  formattingOptions: []
  position:
  - 1.45657670454545e+3
  - 1.69870738636362e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 9
      length: 1
    - location: 22
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 22
  text: enforce returning exactly once
  formattingOptions: []
  position:
  - 1.45779829545454e+3
  - 8.50269886363625e+1
  width: 1.6e+2
  connections:
    indexes:
    - location: 21
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 23
  text: getting a sequence of esponses as they become available
  formattingOptions: []
  position:
  - 1.94068872923951e+3
  - 1.51824082167831e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 10
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 24
  text: take the results of more than one asynchronous task and combine them
  formattingOptions: []
  position:
  - 3.14326526988636e+3
  - 2.24604403409088e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 13
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 25
  text: '"we use async let for structured concurrency"'
  formattingOptions: []
  position:
  - 3.22788884943182e+3
  - 3.15399857954543e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 14
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 26
  text: for when we don't know how many child tasks we're going to want to spawn
  formattingOptions: []
  position:
  - 3.19134410511364e+3
  - 1.01654829545448e+1
  width: 1.6e+2
  connections:
    indexes:
    - location: 15
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 27
  text: can cancel a parent task and the child tasks get cancelled as well
  formattingOptions: []
  position:
  - 3.35668146306818e+3
  - 4.22251420454539e+1
  width: 1.6e+2
  connections:
    indexes:
    - location: 15
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 28
  text: Protect shared mutable state from being accessed from multiple threads
  formattingOptions: []
  position:
  - 3.02090731534091e+3
  - 6.50595170454543e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 16
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 29
  text: built around tasks and functions that can suspend and resume
  formattingOptions: []
  position:
  - 5.66526988636365e+2
  - 6.35048295454543e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 5
      length: 2
    - location: 58
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 30
  text: required when calling an async method. indicates that we know that this can
    result in execution being suspended
  formattingOptions: []
  position:
  - 7.97666903409092e+2
  - 6.8051349431818e+2
  width: 1.2e+2
  connections:
    indexes:
    - location: 6
      length: 1
  _effectiveHeight: 8.4e+1
- ID: 31
  text: think about what else can happen while this is suspended
  formattingOptions: []
  position:
  - 6.99257812500001e+2
  - 4.11049715909089e+2
  width: 1.4e+2
  connections:
    indexes:
    - location: 18
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 32
  text: can only be used in an async context
  formattingOptions: []
  position:
  - 7.34524147727274e+2
  - 5.38709517045452e+2
  width: 1.3e+2
  connections:
    indexes:
    - location: 6
      length: 1
    - location: 33
      length: 2
  _effectiveHeight: 2.8e+1
- ID: 33
  text: in an async method
  formattingOptions: []
  position:
  - 6.87436079545456e+2
  - 5.91834517045452e+2
  width: 1.2e+2
  connections:
    indexes:
    - location: 32
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 34
  text: or in a closure passed to a Task
  formattingOptions: []
  position:
  - 7.43480113636365e+2
  - 6.26369318181816e+2
  width: 1.1e+2
  connections:
    indexes:
    - location: 32
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 35
  text: parallels between throws/try/do catch  and async/await/Task
  fillColorRGB:
    red: 8.96043e-1
    green: 9.97437e-1
    blue: 9.42763e-1
  formattingOptions: []
  position:
  - 4.24907670454546e+2
  - 2.43499999999998e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 4
      length: 1
    - location: 36
      length: 4
  _effectiveHeight: 4.2e+1
- ID: 36
  text: we have to try even if a throwing method doesn't actually throw
  formattingOptions: []
  position:
  - 3.01541193181819e+2
  - 1.64661221590907e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 35
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 37
  text: '*can* throw - so the method could result in an error, or result in something
    being returned'
  formattingOptions: []
  position:
  - 4.85546875000001e+2
  - 1.53780539772725e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 35
      length: 1
  _effectiveHeight: 5.6e+1
- ID: 38
  text: do catch wraps error throwing code up in a box that hides the error from an
    error-free world
  formattingOptions: []
  position:
  - 6.65042613636365e+2
  - 1.77122159090907e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 35
      length: 1
  _effectiveHeight: 5.6e+1
- ID: 39
  text: 'Summary:

    - mark methods that can throw with throws

    - if call one, must use try to signal we know we''re calling something that can
    throw

    - if we call with try, either handle or mark with throws

    - we handle a call to a method that throws by enclosing try in a do block and
    handling error in a catch'
  formattingOptions: []
  position:
  - 6.17073863636365e+2
  - 2.49977272727271e+2
  width: 2.8e+2
  connections:
    indexes:
    - location: 35
      length: 1
  _effectiveHeight: 1.26e+2
- ID: 40
  text: parallel to throws
  formattingOptions: []
  position:
  - 4.10696022727273e+2
  - 6.46994318181818e+2
  width: 1e+2
  connections:
    indexes:
    - location: 5
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 41
  text: our "beware, this could take a while" sign
  formattingOptions: []
  position:
  - 5.27787642045454e+2
  - 8.09146306818186e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 5
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 42
  text: parallel to try
  formattingOptions: []
  position:
  - 6.94904119318182e+2
  - 4.89267045454549e+2
  width: 8e+1
  connections:
    indexes:
    - location: 6
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 43
  text: analogous to wrapping a try in a do block
  formattingOptions: []
  position:
  - 2.39992897727273e+2
  - 2.78688210227277e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 7
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 44
  text: inherits the actor context
  formattingOptions: []
  position:
  - 2.42301136363636e+2
  - 4.22647727272731e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 7
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 45
  text: operation closure implicitly captures self
  formattingOptions: []
  position:
  - 3.95699571136364e+2
  - 3.66767045454549e+2
  width: 1.1e+2
  connections:
    indexes:
    - location: 7
      length: 1
    - location: 46
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 46
  text: can specify a [weak self] for a detatched task
  formattingOptions: []
  position:
  - 3.67176846590909e+2
  - 3.19661221590913e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 45
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 47
  text: pollutes the calling chain until hitting a Task (marking methods blue)
  formattingOptions: []
  position:
  - 3.54463778409091e+2
  - 7.00172585227277e+2
  width: 1.4e+2
  connections:
    indexes:
    - location: 5
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 48
  text: reference semantics, like classes
  formattingOptions: []
  position:
  - 2.95053089488636e+3
  - 5.62498579545464e+2
  width: 1.9e+2
  connections:
    indexes:
    - location: 16
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 49
  text: All UI done on MainActor
  formattingOptions: []
  position:
  - 2.91679865056818e+3
  - 6.53887073863646e+2
  width: 9e+1
  connections:
    indexes:
    - location: 16
      length: 1
    - location: 50
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 50
  text: '"using the main actor to manage access to the main thread"'
  formattingOptions: []
  position:
  - 2.88857776988636e+3
  - 7.03759232954555e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 49
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 51
  text: Mark ObservableObjets with @MainActor
  formattingOptions: []
  position:
  - 3.11873401988636e+3
  - 6.10449573863646e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 16
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 52
  text: To research
  fillColorRGB:
    red: 1e+0
    green: 9.0283e-1
    blue: 9.76506e-1
  formattingOptions: []
  position:
  - 6.81629971590909e+2
  - 3.79034090909196e+1
  width: 1.6e+2
  connections:
    indexes:
    - location: 53
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 53
  text: what exactly is point-free, outside of passing a function instead of a closure
    to a swiftui button?
  formattingOptions: []
  position:
  - 7.68558238636364e+2
  - 7.4110795454556e+1
  width: 1.6e+2
  connections:
    indexes:
    - location: 52
      length: 1
  _effectiveHeight: 5.6e+1
- ID: 54
  text: rules the universe
  formattingOptions: []
  position:
  - 5.51225142045454e+2
  - 1.08510653409101e+2
  width: 1.1e+2
  connections:
    indexes:
    - location: 2
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 55
  text: Task is broken into subunits - PartialAsyncTasks at each suspension point
    and at the completion of the task
  formattingOptions: []
  position:
  - 7.47265625e+1
  - 3.23780539772739e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 7
      length: 1
    - location: 56
      length: 1
  _effectiveHeight: 5.6e+1
- ID: 56
  text: can think of a new one of these each time see an await
  formattingOptions: []
  position:
  - 4.15980113636363e+1
  - 2.52977982954556e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 55
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 57
  text: if we're inside an async methods, somewhere up the calltree we're being run
    in a Task
  formattingOptions: []
  position:
  - 8.02201704545454e+1
  - 4.41067471590919e+2
  width: 1.6e+2
  connections:
    indexes: []
  _effectiveHeight: 5.6e+1
- ID: 58
  text: if both exist, async comes first in the signature. "this is an async function
    that happens to throw"
  formattingOptions: []
  position:
  - 6.22769886363636e+2
  - 7.10414062500003e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 29
      length: 1
    - location: 59
      length: 1
  _effectiveHeight: 5.6e+1
- ID: 59
  text: 'At the call site, it''s reversed, try await blah(), '
  formattingOptions: []
  position:
  - 7.28061079545454e+2
  - 8.06028409090905e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 58
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 60
  text: 'and computed propertes:

    the async has to be put on the _get_ block directly, not on the top-level. e.g.


    var blah: String { get async { ... } }'
  formattingOptions: []
  position:
  - 3.61164772727273e+2
  - 7.76688920454533e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 5
      length: 1
  _effectiveHeight: 9.8e+1
- ID: 61
  text: Stylishness
  fillColorRGB:
    red: 1e+0
    green: 9.0283e-1
    blue: 9.76506e-1
  formattingOptions: []
  position:
  - 8.07599431818182e+1
  - 8.43877840908905e+1
  width: 1.6e+2
  connections:
    indexes:
    - location: 62
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 62
  text: 'Put the await (as well as the try) as close as possible to the thing that
    needs it.  e.g.

    blah = oop + (await ack)'
  formattingOptions: []
  position:
  - 6.02095170454545e+1
  - 1.51401278409072e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 61
      length: 1
  _effectiveHeight: 5.6e+1
- ID: 63
  text: Testing (XCTest)
  fillColorRGB:
    red: 8.96043e-1
    green: 9.97437e-1
    blue: 9.42763e-1
  formattingOptions: []
  position:
  - 2.75852272727273e+2
  - 4.81649857954527e+2
  width: 1.1e+2
  connections:
    indexes:
    - location: 4
      length: 1
    - location: 64
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 64
  text: tests can marked async, so they'll automatically be run in a Task context.
  formattingOptions: []
  position:
  - 2.18618607954545e+2
  - 5.19313210227254e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 63
      length: 1
    - location: 65
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 65
  text: 'lets us get rid of :alot: of the expectation / fulfil expectation / wait
    boilerplate.'
  formattingOptions: []
  position:
  - 3.48792613636363e+1
  - 5.28649147727254e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 64
      length: 1
    - location: 66
      length: 1
  _effectiveHeight: 5.6e+1
- ID: 66
  text: though we lose setting a timeout on something that might take forever
  formattingOptions: []
  position:
  - 1.0234375e+1
  - 6.06575284090891e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 65
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 67
  text: Let's be careful out there
  fillColorRGB:
    red: 8.96043e-1
    green: 9.97437e-1
    blue: 9.42763e-1
  formattingOptions: []
  position:
  - 2.39314630681818e+2
  - 6.06799005681804e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 4
      length: 1
    - location: 68
      length: 1
    - location: 71
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 68
  text: in seemingly simple and "easy to read and understand" code, there's still
    a lot going on in a few lines
  formattingOptions: []
  position:
  - 5.64133522727272e+1
  - 6.68400568181809e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 67
      length: 1
    - location: 69
      length: 1
  _effectiveHeight: 7e+1
- ID: 69
  text: odd things can happen on opposite sides of a suspension point
  formattingOptions: []
  position:
  - 6.95703125e+1
  - 7.59366477272718e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 68
      length: 1
    - location: 70
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 70
  text: need to be careful that we know what to pack away to use later
  formattingOptions: []
  position:
  - 3.63955965909091e+1
  - 8.23908380681808e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 69
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 71
  text: When using tasks, we might get an unexpected order of returns
  formattingOptions: []
  position:
  - 2.365625e+2
  - 6.91422585227263e+2
  width: 1.1e+2
  connections:
    indexes:
    - location: 67
      length: 1
  _effectiveHeight: 5.6e+1
- ID: 72
  text: ''
  formattingOptions: []
  position:
  - 9.90603693181818e+2
  - 9.17640624999982e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 73
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 73
  text: ''
  formattingOptions: []
  position:
  - 9.85294744318182e+2
  - 1.22727840909089e+3
  width: 1.6e+2
  connections:
    indexes:
    - location: 72
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 74
  text: 'reminder that

    - any mehod labeled async can be suspended

    - anytime you see await, you know that''s a possible suspension point'
  formattingOptions: []
  position:
  - 1.21457741477273e+3
  - 4.73884906818184e+1
  width: 1.9e+2
  connections:
    indexes:
    - location: 8
      length: 1
  _effectiveHeight: 7e+1
- ID: 75
  text: the part after the work that's being awaited
  formattingOptions: []
  position:
  - 1.020703125e+3
  - 2.89991473636364e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 19
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 76
  text: when we return from the method that we're awaiting, the next steps are the
    continuation
  formattingOptions: []
  position:
  - 1.05315340909091e+3
  - 3.47485795454546e+2
  width: 1.8e+2
  connections:
    indexes:
    - location: 19
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 77
  text: can think of it as a proxy object that will be filled in later with the right
    value
  formattingOptions: []
  position:
  - 1.20883522727273e+3
  - 2.38313210227272e+2
  width: 1.4e+2
  connections:
    indexes:
    - location: 19
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 78
  text: Checked Throwing Continuations
  fillColorRGB:
    red: 8.96043e-1
    green: 9.97437e-1
    blue: 9.42763e-1
  formattingOptions: []
  position:
  - 1.18528764204545e+3
  - 4.87464488636363e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 8
      length: 1
    - location: 88
      length: 3
  _effectiveHeight: 2.8e+1
- ID: 79
  text: generic with <T, Never>
  formattingOptions: []
  position:
  - 1.52810369318182e+3
  - 2.98082386363635e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 9
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 80
  text: MUST return exactly once
  formattingOptions: []
  position:
  - 1.19305752840909e+3
  - 3.12526985e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 19
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 81
  text: it hangs on to the calling function name so it can log it when errors happen
  formattingOptions: []
  position:
  - 9.82911931818182e+2
  - 1.73714488636363e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 19
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 82
  text: no problem returning Void or tuples
  formattingOptions: []
  position:
  - 9.62411221590909e+2
  - 2.33571019090906e+2
  width: 1.2e+2
  connections:
    indexes:
    - location: 19
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 83
  text: Unsafe Continuations
  fillColorRGB:
    red: 8.96043e-1
    green: 9.97437e-1
    blue: 9.42763e-1
  formattingOptions: []
  position:
  - 1.50461292613636e+3
  - 3.41026278409089e+2
  width: 1.3e+2
  connections:
    indexes:
    - location: 8
      length: 1
    - location: 84
      length: 2
    - location: 87
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 84
  text: Doesn't log if there's a continuation problem
  formattingOptions: []
  position:
  - 1.56290482954545e+3
  - 3.94952411136364e+2
  width: 1.3e+2
  connections:
    indexes:
    - location: 83
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 85
  text: Can get some unspeciied performance increase
  formattingOptions: []
  position:
  - 1.43928267045455e+3
  - 4.95113636363637e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 83
      length: 1
    - location: 86
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 86
  text: but yeah, you shouldn't use this
  formattingOptions: []
  position:
  - 1.52605823863636e+3
  - 5.56036931818182e+2
  width: 1.1e+2
  connections:
    indexes:
    - location: 85
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 87
  text: Dies at the top of the app if there's a double-resume
  formattingOptions: []
  position:
  - 1.52473011363636e+3
  - 4.4209872159091e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 83
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 88
  text: Adding a non-Never type to a continuation property makes it throwing
  formattingOptions: []
  position:
  - 1.06524857954545e+3
  - 4.20401278409092e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 78
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 89
  text: use withCheckedThrowingContinuation
  formattingOptions: []
  position:
  - 9.84946732954536e+2
  - 5.43604403409095e+2
  width: 2e+2
  connections:
    indexes:
    - location: 78
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 90
  text: resume(with:) takes a Result type (so we can avoid calling resume(throwing:)
    in a different code branch
  formattingOptions: []
  position:
  - 1.22859019886364e+3
  - 5.61832386363646e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 78
      length: 1
  _effectiveHeight: 5.6e+1
- ID: 91
  text: 'await MainActor.run { ... }

    for running stuff on main thread'
  formattingOptions: []
  position:
  - 2.74027521306817e+3
  - 5.91188206590909e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 16
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 92
  text: Migrating from closures
  fillColorRGB:
    red: 8.96043e-1
    green: 9.97437e-1
    blue: 9.42763e-1
  formattingOptions: []
  position:
  - 1.34475852272726e+3
  - 6.49620028409091e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 8
      length: 1
    - location: 93
      length: 2
  _effectiveHeight: 1.4e+1
- ID: 93
  text: 'Strategy 1: modify the closure-based version to call the async version'
  formattingOptions: []
  position:
  - 1.23705610795453e+3
  - 6.94850852272728e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 92
      length: 1
    - location: 95
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 94
  text: 'Strategy 2:'
  formattingOptions: []
  position:
  - 1.42814985795453e+3
  - 6.92507102272728e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 92
      length: 1
    - location: 96
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 95
  text: "signatures of old closure-based and new async-based\n    func selectRandomNumber(with
    completion: \n             @escaping (Int, Bool) -> Void) {\n    \n    func randomNumber()
    async (Int, Bool) {\n"
  formattingOptions: []
  position:
  - 1.03300071022726e+3
  - 7.64154829545476e+2
  width: 3e+2
  connections:
    indexes:
    - location: 93
      length: 1
  _effectiveHeight: 8.4e+1
- ID: 96
  text: wrap the closure based version in an async version
  formattingOptions: []
  position:
  - 1.44438565340907e+3
  - 7.25841619318198e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 94
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 97
  text: xcode has some refactorings
  formattingOptions: []
  position:
  - 1.40126953125e+3
  - 3.2036328125e+2
  width: 7e+1
  connections:
    indexes:
    - location: 8
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 98
  text: 'Concrete implementation of

    AsyncSequence'
  formattingOptions: []
  position:
  - 1.78239182692309e+3
  - 4.11670072115391e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 12
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 99
  text: can transform with filter and map
  formattingOptions: []
  position:
  - 1.73334735576924e+3
  - 1.85864783653852e+2
  width: 1.1e+2
  connections:
    indexes:
    - location: 11
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 100
  text: AsyncAlgorithms
  fillColorRGB:
    red: 8.96043e-1
    green: 9.97437e-1
    blue: 9.42763e-1
  formattingOptions: []
  position:
  - 2.12712740384616e+3
  - 1.28232572115391e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 10
      length: 1
    - location: 101
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 101
  text: non-standard-library package of additional goodies
  formattingOptions: []
  position:
  - 2.13968149038462e+3
  - 6.35811298076987e+1
  width: 1.6e+2
  connections:
    indexes:
    - location: 100
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 102
  text: (NS)Notifications as one of the driving examples
  formattingOptions: []
  position:
  - 2.16972055288464e+3
  - 1.84064903846187e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 10
      length: 1
    - location: 103
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 103
  text: strategy for communicating asynchronously
  formattingOptions: []
  position:
  - 2.35917067307694e+3
  - 1.74470552884649e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 102
      length: 1
    - location: 104
      length: 2
  _effectiveHeight: 2.8e+1
- ID: 104
  text: unlike delegate, neither party knows aboot the other
  formattingOptions: []
  position:
  - 2.39197115384617e+3
  - 2.27171875000034e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 103
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 105
  text: '"hey, something happened, maybe here''s an informational payload'
  formattingOptions: []
  position:
  - 2.3637590144231e+3
  - 9.12103365384974e+1
  width: 1.5e+2
  connections:
    indexes:
    - location: 103
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 106
  text: because it can be zero, one, or many, it requires a different approach than
    seen in prior chapters
  formattingOptions: []
  position:
  - 2.16454326923079e+3
  - 2.48764423076959e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 10
      length: 1
    - location: 107
      length: 1
  _effectiveHeight: 5.6e+1
- ID: 107
  text: e.g. CheckedContinuation requires being resumed once and only once
  formattingOptions: []
  position:
  - 2.35455829326925e+3
  - 2.81216346153882e+2
  width: 1.9e+2
  connections:
    indexes:
    - location: 106
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 108
  text: requires a type of what it's async streaming
  formattingOptions: []
  position:
  - 1.7659044471154e+3
  - 4.64128004807728e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 12
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 109
  text: '"Picture it as a stream that gently flows by on a beautiful sunny day. Every
    once in a while an Int floats by on an innertube'
  formattingOptions: []
  position:
  - 1.90334435096155e+3
  - 5.42607572115421e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 12
      length: 1
  _effectiveHeight: 7e+1
- ID: 110
  text: to make a stored property, specify the type of elements, and a continuation(closure)
  formattingOptions: []
  position:
  - 2.05411057692309e+3
  - 5.02379206730805e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 12
      length: 1
    - location: 112
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 111
  text: AsyncStream.Continuation - designed to return zero, one, or more values
  formattingOptions: []
  position:
  - 2.10554086538463e+3
  - 4.38259615384652e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 12
      length: 1
  _effectiveHeight: 4.2e+1
- ID: 112
  text: continuation.yield(value) is what kicks off the innertube
  formattingOptions: []
  position:
  - 2.09374098557694e+3
  - 5.75909855769267e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 110
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 113
  text: A Sequence that can deliver values over time
  formattingOptions: []
  position:
  - 1.76682992788463e+3
  - 1.22868990384652e+2
  width: 1.6e+2
  connections:
    indexes:
    - location: 11
      length: 1
  _effectiveHeight: 2.8e+1
- ID: 114
  text: for await blah in someSequence
  formattingOptions: []
  position:
  - 1.73556790865386e+3
  - 2.71688100961575e+2
  width: 1.8e+2
  connections:
    indexes:
    - location: 11
      length: 1
    - location: 115
      length: 1
  _effectiveHeight: 1.4e+1
- ID: 115
  text: a great use is need to listen to changes to a subscription or something else
    that we need to kep alive the whole time the app is running
  formattingOptions: []
  position:
  - 1.73627403846155e+3
  - 3.10281850961575e+2
  width: 1.7e+2
  connections:
    indexes:
    - location: 114
      length: 1
  _effectiveHeight: 7e+1
